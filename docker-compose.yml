
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile

    container_name: backend
    restart: unless-stopped
    ports:
      - '5000:5000'
    environment:
      NODE_ENV: development
      MYSQL_HOST: db
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      PORT: ${PORT}
      NODE_ENV: ${NODE_ENV}
      EMAIL_USER_NAME: ${EMAIL_USER_NAME}
      EMAIL_USER_PASSWORD: ${EMAIL_USER_PASSWORD}
      EMAIL_SERVICE_PROVIDER: ${EMAIL_SERVICE_PROVIDER}
      EMAIL_FROM_NAME: ${EMAIL_FROM_NAME}
      EMAIL_FROM_ADDRESS: ${EMAIL_FROM_ADDRESS}
      BASE_URL: ${BASE_URL}

    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      API_BASE_URL: ${API_BASE_URL}
    networks:
      - app-network

  db:
    image: mysql:8
    container_name: db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
