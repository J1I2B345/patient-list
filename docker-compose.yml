version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

    container_name: backend
    restart: unless-stopped
    ports:
      - '5000:5000'
    environment:
      NODE_ENV: development
      MYSQL_HOST: db
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    container_name: frontend
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      REACT_APP_API_URL: http://localhost:5000
    networks:
      - app-network

  db:
    image: mysql:8
    container_name: db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
